networks:
  web:
    external: true

services:

  convertx:
    image: ghcr.io/c4illin/convertx:latest
    networks:
      - web
    container_name: convertx
    volumes:
      - {{ root }}/data:/app/data
    #ports:
      #- "3000:3000"
    environment:
      - ACCOUNT_REGISTRATION=false # true or false, doesn't matter for the first account (e.g. keep this to false if you only want one account)
      #- JWT_SECRET=aLongAndSecretStringUsedToSignTheJSONWebToken1234 # will use randomUUID() if unset
      - AUTO_DELETE_EVERY_N_HOURS=1
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-service.loadbalancer.server.port=3000

      #- traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.rule=Host(`{{ ittools_domain | mandatory }}`)
      #- traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.service=${COMPOSE_PROJECT_NAME}-service
      #- traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.entrypoints=https
      #- traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.middlewares=basic-auth-all

      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-lan.rule=Host(`{{ convertx_domain | mandatory }}`) && HeaderRegexp(`X-Real-Ip`, `(^127\.)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-lan.service=${COMPOSE_PROJECT_NAME}-service
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-lan.entrypoints=https
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-lan.middlewares=lan-only

