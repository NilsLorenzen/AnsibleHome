networks:
  traefik_web:
    name: web

services:

  app:
    image: traefik:latest
    networks:
      - traefik_web
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro #zeitzone
      - /var/run/docker.sock:/var/run/docker.sock #Docker zugriff
      - {{ root }}/conf/traefik.yml:/etc/traefik/traefik.yml:ro #statische Konfigurationsdatei
      - {{ root }}/conf/acme/:/etc/traefik/acme/
      - {{ root }}/conf/dynamic/:/etc/traefik/dynamic/:ro #dynamische Konfigurationsdateien
      - {{ root }}/logs:/logs
    privileged: true
    container_name: traefik
    environment:
      - LEGO_DISABLE_CNAME_SUPPORT=true
      - INWX_USERNAME={{ inwx.username }}
      - INWX_PASSWORD={{ inwx.password }}
      - INWX_PROPAGATION_TIMEOUT=100
    labels:
      - traefik.enable=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-dashboard.entrypoints=https
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-dashboard.rule=Host(`{{ traefik_domain }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-dashboard.service=api@internal
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-dashboard.tls.certresolver=letsencrypt-inwx-dns
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-dashboard.tls.domains[0].main={{ traefik_acme_domain }}
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-dashboard.tls.domains[0].sans=*.{{ traefik_acme_domain }}
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-dashboard.middlewares=lan-only
      - traefik.http.middlewares.basic-auth-nils-only.basicauth.users={{ traefik.nils.username }}:{{ traefik.nils.hash }}
      - traefik.http.middlewares.basic-auth-all.basicauth.users={{ traefik.nils.username }}:{{ traefik.nils.hash }},{{ traefik.other.username }}:{{ traefik.other.hash }}
      - traefik.http.middlewares.lan-only.ipallowlist.sourcerange=192.168.10.0/22, 192.168.2.0/24, 172.16.0.0/12
    healthcheck:
      test: traefik healthcheck