- name: deactivate systemd resolve - copy resolved.conf #restart required
  ansible.builtin.template:
    src: resolved.conf.j2
    dest: /etc/systemd/resolved.conf
    owner: root
    group: root
    mode: "644"

- name: copy systemd unit
  ansible.builtin.template:
    src: pihole.service.j2
    dest: /etc/systemd/system/pihole.service
    owner: root
    group: root
    mode: "644"
  notify: restart pihole.service

- name: create /data/pihole dir
  ansible.builtin.file:
    path: "{{ root }}"
    state: directory

- name: copy docker-compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ root }}/docker-compose.yml"
    owner: root
    group: root
    mode: "644"
  notify: restart pihole.service

- name: create /data/pihole/data
  ansible.builtin.file:
    path: "{{ root }}/data"
    state: directory

- name: create /data/pihole/dnsmasq.d
  ansible.builtin.file:
    path: "{{ root }}/dnsmasq.d"
    state: directory

- name: copy custom.list - local dns-entrys
  ansible.builtin.template:
    src: config/custom.list.j2
    dest: "{{ root }}/data/custom.list"
    owner: root
    group: root
    mode: "644"
  notify: restart pihole.service

- name: copy setupVars.conf - pihole settings
  ansible.builtin.template:
    src: config/setupVars.conf.j2
    dest: "{{ root }}/data/setupVars.conf"
    owner: root
    group: root
    mode: "644"
  notify: restart pihole.service

- name: copy 05-pihole-custom-cname.conf - local cnames 
  ansible.builtin.template:
    src: config/05-pihole-custom-cname.conf.j2
    dest: "{{ root }}/dnsmasq.d/05-pihole-custom-cname.conf"
    owner: root
    group: root
    mode: "644"
  notify: restart pihole.service

- name: start pihole.service
  ansible.builtin.systemd:
    state: started
    daemon_reload: true
    enabled: true
    name: pihole.service
  register: pihole_started