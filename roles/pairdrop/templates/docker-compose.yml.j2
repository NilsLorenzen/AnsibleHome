networks:
  web:
    external: true

services:
  pairdrop:
    image: "ghcr.io/linuxserver/pairdrop:latest"
    container_name: {{ role_name }}
    networks:
      - web
    #ports:
      #- "127.0.0.1:3000:3000"
    environment:
      - PUID=1000
      - PGID=1000
      - WS_FALLBACK=false # Set to true to enable websocket fallback if the peer to peer WebRTC connection is not available to the client. All traffic sent between devices using this fallback is routed through the server and therefor not peer to peer!
      - RATE_LIMIT=10 # Set to true to limit clients to 1000 requests per 5 min.
      - RTC_CONFIG=false # Set to the path of a file that specifies the STUN/TURN servers.
      - DEBUG_MODE=false # Set to true to debug container and peer connections.
      - TZ=Europe/Berlin
      - DONATION_BUTTON_ACTIVE=false
      - TWITTER_BUTTON_ACTIVE=true
      - MASTODON_BUTTON_ACTIVE=false
      - BLUESKY_BUTTON_ACTIVE=false
      - CUSTOM_BUTTON_ACTIVE=false
      - PRIVACYPOLICY_BUTTON_ACTIVE=false
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-service.loadbalancer.server.port=3000

      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-lan.rule=Host(`{{ pairdrop_domain | mandatory }}`) && HeaderRegexp(`X-Real-Ip`, `(^127\.)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-lan.service=${COMPOSE_PROJECT_NAME}-service
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-lan.entrypoints=https
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-lan.middlewares=lan-only

      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.rule=Host(`{{ pairdrop_domain | mandatory }}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.service=${COMPOSE_PROJECT_NAME}-service
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.entrypoints=https
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.middlewares=crowdsec,basic-auth-all
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:3000 || exit 1
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
